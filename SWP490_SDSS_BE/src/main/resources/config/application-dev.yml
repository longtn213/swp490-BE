# ===================================================================
# Spring Boot configuration for the "dev" profile.
#
# This configuration overrides the application.yml file.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

#logging:
#  level:
#    ROOT: DEBUG
#    tech.jhipster: DEBUG
#    org.hibernate.SQL: DEBUG
#    com.fpt.ssds: DEBUG

#eureka:
#  instance:
#    prefer-ip-address: true
#  client:
#    enabled: false # By default, the JHipster Registry is not used in the "dev" profile
#    service-url:
#      defaultZone: http://admin:${jhipster.registry.password}@localhost:8761/eureka/

spring:
  application:
    name: ssds
  devtools:
    restart:
      enabled: true
      additional-exclude: static/**
    livereload:
      enabled: false # we use Webpack dev server + BrowserSync for livereload
  jackson:
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: true
      WRITE_DATE_TIMESTAMPS_AS_NANOSECONDS: false
    deserialization:
      READ_DATE_TIMESTAMPS_AS_NANOSECONDS: false
  cloud:
    config:
      uri: http://admin:${jhipster.registry.password}@localhost:8761/config
      # name of the config server's property source (file.yml) that we want to use
      name: SSDS
      profile: dev
      label: main # toggle to switch to a different version of the configuration as stored in git
      # it can be set to any label, branch or commit of the configuration source Git repository
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: ${SPRING_DATASOURCE_URL:jdbc:mysql://34.92.192.134/ssds_master?useUnicode=true&characterEncoding=utf8&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=false}
    username: ${SPRING_DATASOURCE_USERNAME:ssds}
    password: ${SPRING_DATASOURCE_PASSWORD:Password123#@!}
    driverClassName: ${SPRING_DATASOURCE_DRIVER:com.mysql.cj.jdbc.Driver}
    hikari:
      poolName: Hikari
      auto-commit: false
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
  jpa:
    show-sql: ${DEBUG_SQL:true}
  liquibase:
    # Remove 'faker' if you do not want the sample data to be loaded automatically
    contexts: dev, faker
  #  mail:
  #    host: localhost
  #    port: 25
  #    username:
  #    password:
  messages:
    basename: i18n/messages
  main:
    allow-bean-definition-overriding: true
  thymeleaf:
    cache: false
  sleuth:
    # https://github.com/spring-projects/spring-framework/issues/27844#issuescomment-1002866885
    # https://github.com/spring-cloud/spring-cloud-sleuth/issues/2094
    async:
      enabled: false
    enabled: false
    sampler:
      probability: 1 # report 100% of traces
  zipkin: # Use the "zipkin" Maven profile to have the Spring Cloud Zipkin dependencies
    base-url: http://localhost:9411
    enabled: false
    locator:
      discovery:
        enabled: true
  #  zookeeper:
  #    connect: 127.0.0.1:2181
  #    connection:
  #      timeout: 6000
#  kafka:
#    bootstrap-servers: ${CONFLUENT_KAFKA_BOOTSTRAP_SERVERS:pkc-ldvr1.asia-southeast1.gcp.confluent.cloud:9092}
#    properties:
#      basic:
#        auth.credentials.source: USER_INFO
#        auth.user.info: 3TS6354HBSN5RJBG:yMBPwERUIjdH1wgjlJF+y6OnXhegxI7sUJ1//h3AsxL1P6koIfk6VOF1XYtdsUKp
#      security:
#        protocol: SASL_SSL
#      sasl:
#        jaas:
#          config: org.apache.kafka.common.security.plain.PlainLoginModule required username='3TS6354HBSN5RJBG' password='yMBPwERUIjdH1wgjlJF+y6OnXhegxI7sUJ1//h3AsxL1P6koIfk6VOF1XYtdsUKp';
#        mechanism: PLAIN
#    topics:
#      state-change: ${CONFLUENT_SSDS_KAFKA_TOPIC_STATE_CHANGE:ssds-state-change-dev}
#    groups:
#      state-change: ${CONFLUENT_SSDS_KAFKA_GROUP_STATE_CHANGE:ssds-state-change-dev}

server:
  port: ${SERVER_PORT:8088}

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
  clientApp:
    name: 'wesApp'
  # By default CORS is disabled. Uncomment to enable.
  # cors:
  #     allowed-origins: "*"
  #     allowed-methods: "*"
  #     allowed-headers: "*"
  #     exposed-headers: "Authorization,Link,X-Total-Count"
  #     allow-credentials: true
  #     max-age: 1800
  logging:
    use-json-format: ${USE_JSON_LOG_FORMAT:false} # By default, logs are not in Json format
# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

# application:
ssds:
  api:
    ref:
      internal: /api
      external: /ext
      public: /public
  config:
    timezone: Asia/Ho_Chi_Minh
    auth0:
      base-domain: ${AUTH0_BASE_DOMAIN:https://ssds-beteam-dev.au.auth0.com}
      client-id: ${AUTH0_CLIENT_ID:lo1m2tc69L7qrqQzMHfihMHVDTHIfOJ7}
      client-secret: ${AUTH0_CLIENT_SECRET:LQBJqHhhNXG8BnjZE4S2pmphvXKMkaC8QjgYnJLdsKQDA_r8Lbars1gJMlzp2GYX}
      audience: ${AUTH0_AUDIENCE:https://ssds-beteam-dev.au.auth0.com/api/v2/}
  scheduler:
    cronjob:
      create-record-appointment-tracking: ${CREATE_RECORD_APPOINTMENT_TRACKING:0 0 0 * * ?}
      summary-metrix-in-day: ${SUMMARY_METRIX_IN_DAY:0 1 0 * * ?}
      interval-enrich-overdue-info: ${INTERVAL_ENRICH_OVERDUE_INFO:60000}
  gcs:
    project-id: ${GCS_PROJECT_ID:ageless-arcanum-372412}
    signed-url-time-limit-in-minutes: ${GCS_SIGNED_URL_TIME_LIMIT_IN_MINUTES:15}
    default-gcs-location: ${GCS_DEFAULT_GCS_LOCATION:ASIA}
    root-bucket-name: ${GCS_ROOT_BUCKET_NAME:ssds_prod_media}
    prefix: ${GCS_PREFIX:https://storage.googleapis.com}
    impersonated-credentials:
      target-principal: ${GCS_TARGET_PRINCIPAL:service-400045177161@gs-project-accounts.iam.gserviceaccount.com}
      life-time: 3600
  twilio:
    account_sid: ${TWILIO_ACCOUNT_SID:ACb530b63fd1026b77968682ae4cf2c6a8}
    auth_token: ${TWILIO_AUTH_TOKEN:67dc449f27574442ab986560c680088f}
    phone_number: ${TWILIO_PHONE_NUMBER:+12056561146}
external:
  api:
    partner:
      google-maps-geocoding:
        url: https://google-maps-geocoding.p.rapidapi.com/geocode/json?language=en&address=
        host: google-maps-geocoding.p.rapidapi.com
        key: f682bf441cmsh65c3115a1522186p13feaejsnaca6305c3b91
security:
  authentication:
    #    public-key-location: classpath:config/tls/public_key.pem
    public-key-file: ${AUTH0_PUBLIC_KEY:classpath:security/auth_id_rsa.pub}
